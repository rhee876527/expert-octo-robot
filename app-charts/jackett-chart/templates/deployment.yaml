apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jackett
  name: jackett
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jackett
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: jackett
    spec:
      containers:
        - env:
            - name: TZ
              value: "{{ .Values.env.TZ }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          name: jackett
          ports:
            - containerPort: 9117
          securityContext:
            readOnlyRootFilesystem: true
            runAsGroup: {{ .Values.user.PGID }}
            runAsUser: {{ .Values.user.PUID }}
          volumeMounts:
            - mountPath: /downloads
              name: jackett-blackhole
            - mountPath: /config
              name: jackett-config
            - mountPath: /run
              name: jackett-tmpfs0
      restartPolicy: Always
      volumes:
        - hostPath:
            path: '{{ include "get.appsDir" . }}/jackett/jackett/blackhole'
          name: jackett-blackhole
        - hostPath:
            path: '{{ include "get.appsDir" . }}/jackett/jackett/config'
          name: jackett-config
        - emptyDir:
            medium: Memory
          name: jackett-tmpfs0

---
apiVersion: v1
kind: Service
metadata:
  name: jackett
spec:
  selector:
    app: jackett
  ports:
    - protocol: TCP
      port: 9117
      targetPort: 9117