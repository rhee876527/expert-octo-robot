apiVersion: v1
kind: Service
metadata:
  name: miniflux-db
spec:
  selector:
    app: miniflux-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: miniflux-db
  labels:
    app: miniflux-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: miniflux-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: miniflux-db
    spec:
      containers:
        - name: miniflux-db
          image: "{{ .Values.valkey.repository }}:{{ .Values.valkey.tag }}"
          env:
            - name: POSTGRES_DB
              value: miniflux-db
            - name: POSTGRES_PASSWORD
              value: {{ include "get.miniPass" . }}
            - name: POSTGRES_USER
              value: admin1
          ports:
            - containerPort: 5432
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - admin1
                - -d
                - miniflux-db
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: miniflux-db
      volumes:
        - name: miniflux-db
          hostPath:
            path: "{{ include "get.appsDir" . }}/miniflux/db"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: miniflux
spec:
  selector:
    app: miniflux
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: miniflux
  labels:
    app: miniflux
spec:
  replicas: 1
  selector:
    matchLabels:
      app: miniflux
  template:
    metadata:
      labels:
        app: miniflux
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ['sh', '-c', 'until nc -z miniflux-db 5432; do echo "Waiting for miniflux-db..."; sleep 2; done']
      containers:
        - name: miniflux
          image: "{{ .Values.invidious.repository }}:{{ .Values.miniflux.tag }}"
          env:
            - name: ADMIN_PASSWORD
              value: {{ include "get.miniPass" . }}
            - name: ADMIN_USERNAME
              value: adm
            - name: BASE_URL
              value: https://rss.{{ include "get.domain" . }}
            - name: CREATE_ADMIN
              value: "1"
            - name: DATABASE_URL
              value: postgres://admin1:{{ include "get.miniPass" . }}@miniflux-db/miniflux-db?sslmode=disable
            - name: RUN_MIGRATIONS
              value: "1"
          livenessProbe:
            exec:
              command:
                - /usr/bin/miniflux
                - -healthcheck
                - auto
          ports:
            - containerPort: 8080
      restartPolicy: Always